{"version":3,"sources":["webpack:///./src/components/image-box.module.scss","webpack:///./src/pages/projects/t-shirt.tsx","webpack:///./src/pages/projects/styles.module.scss","webpack:///./src/components/image-box.tsx"],"names":["module","exports","TshirtPage","render","allProjects","this","props","data","edges","map","e","node","currentProject","project","currentProjectGroup","allProjectGroups","find","pg","name","projectGroup","mainImage","childImageSharp","fluid","className","lg","sharedStyles","src","getImageUrl","alt","filename","withPrefix","imageFolder","React","pageQuery","ImageBox","state","isModalOpen","toggleModal","bind","setState","styles","onClick","showCaption","isOpen","toggle","centered","fade","charCode","color"],"mappings":"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","file":"component---src-pages-projects-t-shirt-tsx-5f97c4f6df4e2bd6245c.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageBox\":\"image-box-module--image-box--3n3h7\",\"modal\":\"image-box-module--modal--a--Wc\",\"imgCaption\":\"image-box-module--img-caption--1ecPQ\"};","import * as React from \"react\";\nimport * as sharedStyles from \"./styles.module.scss\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport { graphql, withPrefix } from \"gatsby\";\nimport { ImageBox } from \"../../components/image-box\";\nimport { ProjectLayout } from \"../../components/project-layout\";\nimport { ProjectPageProps } from \"../../models/project-page-props\";\n\nexport default class TshirtPage extends React.Component<ProjectPageProps, {}> {\n  public render() {\n    return (\n      <ProjectLayout\n        allProjects={this.props.data.allProjects.edges.map(e => e.node)}\n        currentProject={this.props.data.project.edges[0].node}\n        currentProjectGroup={\n          this.props.data.allProjectGroups.edges.find(\n            pg =>\n              pg.node.name == this.props.data.project.edges[0].node.projectGroup\n          ).node\n        }\n        mainImage={this.props.data.mainImage.childImageSharp.fluid}\n      >\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col lg=\"8\">\n              <h3>The Project &amp; My Roles </h3>\n              <p>\n                Every four months, PlanGrid recruits students from the\n                University of Waterloo for its internship program. As a way to\n                show appreciation to their contribution to the company, the\n                engineering director came up with an idea to design a limited\n                edition t-shirt for them. As a designer, I worked with the co-op\n                students to (secretly) brainstorm ideas for the design of the\n                t-shirt. I hand-sketched different designs and created\n                illustrations using Adobe Illustrator.\n              </p>\n            </Col>\n          </Row>\n\n          <Row className=\"justify-content-center\">\n            <Col lg=\"8\">\n              <h3>Brainstorming Ideas</h3>\n              <p className={sharedStyles.quote}>\n                The design workshop plays an important role to gather ideas from\n                the co-op students. Since they will be wearing the t-shirt, it’s\n                crucial for me to have them involved in the design process.\n              </p>\n              <p>\n                During the design workshop, I asked the co-op students to write\n                down ideas or words that popped up in their mind when thinking\n                about PlanGrid and the University of Waterloo. Everyone in the\n                workshop had the word \"Waterloo geese\" in their list as they are\n                so many geese around the university campus. Concepts of a hard\n                hat, campus buildings, and construct your future also showed up\n                as PlanGrid creates software for the construction industry.\n                Other ideas such as maple leaf, US and Canada maps also appeared\n                in the workshop.\n              </p>\n              <Row className=\"justify-content-center\">\n                <Col lg=\"8\">\n                  <ImageBox\n                    src={this.getImageUrl(\"wordcloud.png\")}\n                    alt=\"Ideas generated in the design workshop\"\n                    className=\"img-fluid\"\n                  />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n\n          <Row className=\"justify-content-center\">\n            <Col lg=\"8\">\n              <h3>Crazy 8’s</h3>\n              <p>\n                In crazy 8’s exercise, the students spent a total of 8 minutes\n                to convert words and ideas into 8 different drawings. The\n                activity turned out to be quite challenging for them as they\n                only had one minute to sketch each drawing. There were times\n                when students feared that their pictures looked ugly or gave up\n                drawing because they ran out of ideas. To maintain the energy\n                level in the room, I had to shout out some of the keywords\n                generated in the brainstorming sessions as well as to emphasize\n                them to focus on the ideas rather than the look of their\n                drawings.\n              </p>\n              <Row className=\"justify-content-center\">\n                <Col lg=\"8\">\n                  <ImageBox\n                    src={this.getImageUrl(\"crazy8.jpg\")}\n                    alt=\"Crazy 8’s drawings\"\n                    className=\"img-fluid\"\n                  />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n\n          <Row className=\"justify-content-center\">\n            <Col lg=\"8\">\n              <h3>Designing the Logo</h3>\n              <p>\n                Coming out of the design workshop, I knew by heart that the\n                students would like to have a goose on their t-shirt. Though I\n                spent time looking for inspiration on the internet, a majority\n                of my sketches still revolved around the concept of Waterloo\n                geese.\n              </p>\n              <Row className=\"justify-content-center\">\n                <Col lg=\"5\">\n                  <ImageBox\n                    src={this.getImageUrl(\"inspo.jpg\")}\n                    alt=\"Mood board\"\n                    className=\"img-fluid\"\n                  />\n                </Col>\n                <Col lg=\"5\">\n                  <ImageBox\n                    src={this.getImageUrl(\"sketches.jpg\")}\n                    alt=\"Sketching potential logos\"\n                    className=\"img-fluid\"\n                  />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n\n          <Row className=\"justify-content-center\">\n            <Col lg=\"8\">\n              <p>\n                Because of this, my mentor taught me a double diamond design\n                process, from which I learned to explore different designs and\n                narrowed down to ones that would work for this project. I\n                adopted this method and came up with three different designs:\n                the goose, the buildings, and the plain text.\n              </p>\n              <Row className=\"justify-content-center\">\n                <Col lg=\"8\">\n                  <ImageBox\n                    src={this.getImageUrl(\"print.jpg\")}\n                    alt=\"Design options\"\n                    className=\"img-fluid\"\n                  />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n\n          <Row className=\"justify-content-center\">\n            <Col lg=\"8\">\n              <p>\n                I presented these designs to the design team and the creative\n                director at PlanGrid. Everyone voted in favor of the PlanGrid +\n                Goose logo as it suited the purpose of the project the most.\n                However, one of the designers thought that the logo alone didn’t\n                tell much about the work that PlanGrid provided to the\n                construction industry. In response to the comment, I added the\n                text that said “build better together” to the final design of\n                the logo.\n              </p>\n              <Row className=\"justify-content-center\">\n                <Col lg=\"8\">\n                  <ImageBox\n                    src={this.getImageUrl(\"shirt.png\")}\n                    alt=\"Final logo\"\n                    className=\"img-fluid\"\n                  />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </ProjectLayout>\n    );\n  }\n\n  private getImageUrl(filename: string) {\n    return withPrefix(\n      `/images/${this.props.data.project.edges[0].node.imageFolder}/${filename}`\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query TshirtQuery($path: String!) {\n    allProjects: allProjectsJson {\n      ...ProjectFields\n    }\n    allProjectGroups: allProjectGroupsJson {\n      ...ProjectGroupFields\n    }\n    project: allProjectsJson(filter: { url: { eq: $path } }) {\n      ...ProjectFields\n    }\n    mainImage: file(relativePath: { eq: \"t-shirt/main.png\" }) {\n      ...MainImageSizes\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageTitle\":\"styles-module--image-title--Zt6Pd\",\"quote\":\"styles-module--quote--1E26q\"};","import * as React from \"react\";\r\nimport { Modal, ModalBody, ModalFooter, Button, ModalHeader } from \"reactstrap\";\r\nimport * as styles from \"./image-box.module.scss\";\r\n\r\nexport interface ImageBoxProps {\r\n  src: string;\r\n  alt?: string;\r\n  className?: string;\r\n  showCaption?: boolean;\r\n}\r\n\r\nexport interface ImageBoxState {\r\n  isModalOpen: boolean;\r\n}\r\n\r\nexport class ImageBox extends React.Component<ImageBoxProps, ImageBoxState> {\r\n  constructor(props: ImageBoxProps) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n  }\r\n\r\n  public toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <>\r\n        <figure>\r\n          <img\r\n            src={this.props.src}\r\n            alt={this.props.alt}\r\n            className={`${styles.imageBox} ${this.props.className}`}\r\n            onClick={this.toggleModal}\r\n          />\r\n          {this.props.showCaption === false ? null : (\r\n            <figcaption className={`text-center ${styles.imgCaption}`}>\r\n              {this.props.alt}\r\n            </figcaption>\r\n          )}\r\n        </figure>\r\n        <Modal\r\n          isOpen={this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n          centered={true}\r\n          fade={false}\r\n          className={styles.modal}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal} charCode=\"X\">\r\n            {this.props.alt}\r\n          </ModalHeader>\r\n          <ModalBody className=\"text-center\">\r\n            <img\r\n              src={this.props.src}\r\n              alt={this.props.alt}\r\n              className={this.props.className}\r\n            />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggleModal}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}