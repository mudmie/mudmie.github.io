{"version":3,"sources":["webpack:///./src/components/image-box.module.scss","webpack:///./src/components/image-box.tsx","webpack:///./src/pages/projects/shipment-audit-trail.tsx"],"names":["module","exports","ImageBox","props","state","isModalOpen","toggleModal","bind","this","setState","render","src","alt","className","styles","onClick","showCaption","isOpen","toggle","centered","fade","charCode","color","React","ShipmentAuditTrailPage","render2","allProjects","data","edges","map","e","node","currentProject","project","currentProjectGroup","allProjectGroups","find","pg","name","projectGroup","mainImage","childImageSharp","fluid","lg","href","target","getImageUrl","filename","withPrefix","imageFolder","pageQuery"],"mappings":"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","file":"component---src-pages-projects-shipment-audit-trail-tsx-68d92bce0c13ac2894a6.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageBox\":\"image-box-module--image-box--3n3h7\",\"modal\":\"image-box-module--modal--a--Wc\",\"imgCaption\":\"image-box-module--img-caption--1ecPQ\"};","import * as React from \"react\";\r\nimport { Modal, ModalBody, ModalFooter, Button, ModalHeader } from \"reactstrap\";\r\nimport * as styles from \"./image-box.module.scss\";\r\n\r\nexport interface ImageBoxProps {\r\n  src: string;\r\n  alt?: string;\r\n  className?: string;\r\n  showCaption?: boolean;\r\n}\r\n\r\nexport interface ImageBoxState {\r\n  isModalOpen: boolean;\r\n}\r\n\r\nexport class ImageBox extends React.Component<ImageBoxProps, ImageBoxState> {\r\n  constructor(props: ImageBoxProps) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n  }\r\n\r\n  public toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <>\r\n        <figure>\r\n          <img\r\n            src={this.props.src}\r\n            alt={this.props.alt}\r\n            className={`${styles.imageBox} ${this.props.className}`}\r\n            onClick={this.toggleModal}\r\n          />\r\n          {this.props.showCaption === false ? null : (\r\n            <figcaption className={`text-center ${styles.imgCaption}`}>\r\n              {this.props.alt}\r\n            </figcaption>\r\n          )}\r\n        </figure>\r\n        <Modal\r\n          isOpen={this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n          centered={true}\r\n          fade={false}\r\n          className={styles.modal}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal} charCode=\"X\">\r\n            {this.props.alt}\r\n          </ModalHeader>\r\n          <ModalBody className=\"text-center\">\r\n            <img\r\n              src={this.props.src}\r\n              alt={this.props.alt}\r\n              className={this.props.className}\r\n            />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggleModal}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport { graphql, withPrefix } from \"gatsby\";\r\nimport { ImageBox } from \"../../components/image-box\";\r\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\";\r\nimport { ProjectLayout } from \"../../components/project-layout\";\r\nimport { ProjectPageProps } from \"../../models/project-page-props\";\r\n\r\nexport default class ShipmentAuditTrailPage extends React.Component<\r\n  ProjectPageProps,\r\n  {}\r\n> {\r\n  public render() {\r\n    return <div />;\r\n  }\r\n  public render2() {\r\n    return (\r\n      <ProjectLayout\r\n        allProjects={this.props.data.allProjects.edges.map(e => e.node)}\r\n        currentProject={this.props.data.project.edges[0].node}\r\n        currentProjectGroup={\r\n          this.props.data.allProjectGroups.edges.find(\r\n            pg =>\r\n              pg.node.name == this.props.data.project.edges[0].node.projectGroup\r\n          ).node\r\n        }\r\n        mainImage={this.props.data.mainImage.childImageSharp.fluid}\r\n      >\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <h3>Background</h3>\r\n              <p>\r\n                Products that are consumed by consumers such as food, drugs, and\r\n                cosmetics are considered a&nbsp;\r\n                <i>\r\n                  <b>high risk for public safety.</b>\r\n                </i>\r\n                To control the quality and the safety of these products, the\r\n                Food and Drug Administration (FDA) has enforced a number of\r\n                regulations, including the &nbsp;\r\n                <OutboundLink\r\n                  href=\"https://www.accessdata.fda.gov/scripts/cdrh/cfdocs/cfcfr/CFRSearch.cfm?CFRPart=211&amp;showFR=1\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Code of Federal Regulation Title 21\r\n                </OutboundLink>\r\n                . This regulation specifically instructs that&nbsp;\r\n                <i>\r\n                  <b>\r\n                    there must exist a system that records and archives\r\n                    activities performed during the entire production process\r\n                  </b>\r\n                </i>\r\n                , starting from obtaining materials until distributing finished\r\n                goods.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <h3>Situation of Concern</h3>\r\n              <p>\r\n                Manufacturing plants and copackers are fast-paced working\r\n                environment. Workers need to work and move around quickly to\r\n                complete their assigned tasks. They also work in different\r\n                shifts, making it even harder to track all issues and changes\r\n                that happen in a day.\r\n              </p>\r\n              <p>\r\n                From time to time, unexpected events happen. Currently, there is\r\n                &nbsp;\r\n                <i>\r\n                  <b>\r\n                    no way to track who, what, when, and why a production record\r\n                    is modified or deleted\r\n                  </b>\r\n                </i>\r\n                &nbsp;. In an extreme case of a product recall by the FDA, it is\r\n                critical that records of production activities are presented for\r\n                referring affected batches or for other investigations.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <h3>First Round of User Workflow Research</h3>\r\n              <p>\r\n                To design a Shipment Audit Trail, I, as a designer, must have a\r\n                solid understanding of the shipping process. The knowledge of\r\n                the shipping workflow will enable me to answer the questions\r\n                what are activities that must be captured in the Audit Trail.\r\n              </p>\r\n              <p>\r\n                Each client has the ability to create a custom workflow that\r\n                fits their specific needs or processes. With a large number of\r\n                clients, there is a high number of variations in the workflow\r\n                that each client chooses to follow at their site. To understand\r\n                the overall shipping process, I interviewed Nulogyâ€™s\r\n                professional service consultant, who ho work directly with\r\n                clients to provide training and technical supports.\r\n              </p>\r\n              <p>\r\n                After several interviews with multiple consultants, a\r\n                low-fidelity user workflow is created by grouping sticky notes\r\n                based on category of tasks and their hierarchical order\r\n              </p>\r\n              <ImageBox\r\n                src={this.getImageUrl(\"research.jpg\")}\r\n                alt=\"Work Breakdown Structure of Craft Beer Ordering System\"\r\n                className=\"img-fluid\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <h3>Second Round of User Workflow Research</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <p>\r\n                The second round of interview is conducted to fill the gap of\r\n                missing information from the previous round. It is useful to\r\n                understand more about extreme cases and problems that can happen\r\n                after a shipment is shipped. Some potential problems due to\r\n                human errors include sending a shipment to a wrong destination\r\n                or sending wrong items. In these cases, any past record related\r\n                to the shipment is needed for further investigation to rectify\r\n                the situation. With additional information, I create a complete\r\n                workflow for a typical shipping process shown below.\r\n              </p>\r\n              <ImageBox\r\n                src={this.getImageUrl(\"workflow.png\")}\r\n                alt=\"Work Breakdown Structure of Craft Beer Ordering System\"\r\n                className=\"img-fluid\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"10\">\r\n              <h3>The Design</h3>\r\n              <p>\r\n                The\r\n                <ImageBox\r\n                  src={this.getImageUrl(\"info.png\")}\r\n                  alt=\"Work Breakdown Structure of Craft Beer Ordering System\"\r\n                  className=\"img-fluid\"\r\n                />\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </ProjectLayout>\r\n    );\r\n  }\r\n\r\n  private getImageUrl(filename: string) {\r\n    return withPrefix(\r\n      `/images/${this.props.data.project.edges[0].node.imageFolder}/${filename}`\r\n    );\r\n  }\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query ShipmentAuditTrailQuery($path: String!) {\r\n    allProjects: allProjectsJson {\r\n      ...ProjectFields\r\n    }\r\n    allProjectGroups: allProjectGroupsJson {\r\n      ...ProjectGroupFields\r\n    }\r\n    project: allProjectsJson(filter: { url: { eq: $path } }) {\r\n      ...ProjectFields\r\n    }\r\n    mainImage: file(relativePath: { eq: \"shipment-audit-trail/main.png\" }) {\r\n      ...MainImageSizes\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}