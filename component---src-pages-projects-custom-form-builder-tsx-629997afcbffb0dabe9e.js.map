{"version":3,"sources":["webpack:///./src/pages/projects/custom-form-builder.tsx","webpack:///./src/pages/projects/styles.module.scss"],"names":["CustomFormBuilderPage","render","allProjects","this","props","data","edges","map","e","node","currentProject","project","mainImage","childImageSharp","fluid","className","lg","sharedStyles","src","getImageUrl","alt","href","target","filename","withPrefix","imageFolder","React","pageQuery","module","exports"],"mappings":"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","file":"component---src-pages-projects-custom-form-builder-tsx-629997afcbffb0dabe9e.js","sourcesContent":["import * as React from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport * as sharedStyles from \"./styles.module.scss\";\nimport { graphql, withPrefix } from \"gatsby\";\nimport { ImageBox } from \"../../components/image-box\";\nimport {\n  ProjectLayout,\n  PROJECT_BODY_COLUMN,\n} from \"../../components/project-layout\";\nimport { ProjectPageProps } from \"../../models/project-page-props\";\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\";\n\nexport default class CustomFormBuilderPage extends React.Component<\n  ProjectPageProps,\n  {}\n> {\n  public render() {\n    return (\n      <ProjectLayout\n        allProjects={this.props.data.allProjects.edges.map(e => e.node)}\n        currentProject={this.props.data.project.edges[0].node}\n        mainImage={this.props.data.mainImage.childImageSharp.fluid}\n      >\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col lg=\"4\">\n              <h3>Overview</h3>\n            </Col>\n            <Col lg=\"8\">\n              <p>\n                PlanGrid provides cloud-based solutions to increase productivity\n                in the construction industry. The company got acquired by\n                Autodesk in 2018 and became part of Autodesk Construction Cloud.\n              </p>\n              <p>\n                I was a{\" \"}\n                <span className={sharedStyles.bold}>\n                  product design intern{\" \"}\n                </span>\n                on <span className={sharedStyles.bold}>Field Reports</span>, a\n                tool for users to create, submit, and review construction\n                reports.\n              </p>\n              <p>\n                I spent 6 weeks working with a product manager, designers,\n                researchers, and developers to examine form creation process and\n                design a custom form builder feature.\n              </p>\n              <p>\n                My research and design initiatives{\" \"}\n                <span className={sharedStyles.bold}>provided a foundation</span>{\" \"}\n                for the team to{\" \"}\n                <span className={sharedStyles.bold}>\n                  successfully launched the feature\n                </span>{\" \"}\n                in early 2020.\n              </p>\n            </Col>\n          </Row>\n\n          <Row className=\"justify-content-center\">\n            <Col lg=\"4\">\n              <h3>Context</h3>\n            </Col>\n            <Col lg=\"8\">\n              <p>\n                Because construction work is complex and high-risk,\n                documentation of processes and progress is crucial. There are\n                many types of forms, but Daily Report is the most used ones.\n              </p>\n              <p>\n                Daily Report provides details of daily activities &amp; events\n                at a worksite. It contains information such as\n                <ul>\n                  <li>weather condition</li>\n                  <li>work log</li>\n                  <li>equipment &amp; material</li>\n                  <li>visitor records</li>\n                </ul>\n              </p>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col lg=\"4\">\n              <h3>Current Field Reports</h3>\n            </Col>\n            <Col lg=\"8\">\n              <p>\n                PlanGrid offers 2 ways to create reports &mdash; using a\n                built-in daily report feature or upload your own PDF report.\n              </p>\n              <p className={sharedStyles.pin}>\n                {\" \"}\n                <span className={sharedStyles.bold}>The Problem</span>\n                <br />\n                Many users reported that the current tool wasn't flexible to\n                use. They wanted to create custom forms directly on PlanGrid\n                rather than having to upload PDFs.\n              </p>\n            </Col>\n          </Row>\n\n          <Row className=\"justify-content-center\">\n            <Col lg=\"6\" className={sharedStyles.creamBg}>\n              <p>\n                <span className={sharedStyles.bold}>Native Daily Report</span>\n                <br />\n                Select components to set up a report.\n                <div className=\"text-center\">\n                  <ImageBox\n                    src={this.getImageUrl(\"DR.jpg\")}\n                    alt=\"\"\n                    className=\"img-fluid\"\n                  />\n                  <p>\n                    Once created, it can be shared, filled out, and submitted.\n                  </p>\n                  <ImageBox\n                    src={this.getImageUrl(\"DR1.jpg\")}\n                    alt=\"\"\n                    className=\"img-fluid\"\n                  />\n                </div>\n              </p>\n            </Col>\n            <Col lg=\"6\" className={sharedStyles.creamBg}>\n              <p>\n                <span className={sharedStyles.bold}>Custom PDF Upload</span>\n                <br />\n                Drop a PDF file to upload.\n                <div className=\"text-center\">\n                  <ImageBox\n                    src={this.getImageUrl(\"PDF.jpg\")}\n                    alt=\"\"\n                    className=\"img-fluid\"\n                  />\n                  <p>\n                    Once uploaded, the system generates a fillable PDF report.\n                  </p>\n                  <ImageBox\n                    src={this.getImageUrl(\"PDF1.jpg\")}\n                    alt=\"\"\n                    className=\"img-fluid\"\n                  />\n                </div>\n              </p>\n            </Col>\n          </Row>\n\n          <Row className=\"justify-content-center\">\n            <Col lg=\"4\">\n              <h3>Research</h3>\n            </Col>\n            <Col lg=\"8\">\n              <p>\n                I got a big picture of the problem after syncing with the\n                product manager, but I still didnâ€™t have enough details to solve\n                the problem.{\" \"}\n              </p>\n              <p>\n                The goal of this research was to understand sequences of tasks\n                &amp; tools used to create forms as well as to find out\n                the satisfaction level &amp; pain points of the current process.\n              </p>\n              <p>\n                <span className={sharedStyles.topicRight}>\n                  Recruiting Participants\n                </span>\n                <br />I worked with{\" \"}\n                <OutboundLink\n                  href=\"https://www.linkedin.com/in/kimberley-pita\"\n                  target=\"_blank\"\n                >\n                  Kim\n                </OutboundLink>\n                , a research intern, to recruit 10 companies (small, medium,\n                large-sized &amp; government-based) to participate in the user\n                research.\n              </p>\n              <p>\n                <span className={sharedStyles.topicRight}>\n                  Research Methods\n                </span>\n                <br />A user-centered design method of contextual inquiry was\n                chosen for this research as it helped reveal the underlying work\n                structure of the form creation process.\n              </p>\n              <p>\n                I also applied a master-apprentice model, where the users\n                (experts) walked me (a novice) through the form creation process\n                step by step.\n              </p>\n              <p className={sharedStyles.pin}>\n                {\" \"}\n                <span className={sharedStyles.bold}>Learning #1</span>\n                <br />\n                Overall, users weren't satisfied with the current PlanGrid\n                tools. They addressed the frustration around limited\n                customizability, inefficient &amp; lengthy processes, and lack of\n                data aggregation.\n              </p>\n              <p className={sharedStyles.pin}>\n                {\" \"}\n                <span className={sharedStyles.bold}>Learning #2</span>\n                <br />\n                Paper, Excel, PDF, and PlanGrid Native Field Reports were common\n                tools used in the form creation process.\n              </p>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col lg=\"4\">\n              <h3>\n                Design/ <br />\n                Concept Testing\n              </h3>\n            </Col>\n            <Col lg=\"8\">\n              <p>\n                With learnings and findings from user research, I explored\n                potential designs and prototyped 3 different concepts.\n              </p>\n              <p>\n                <span className={sharedStyles.bold}>\n                  It should be noted that these concepts were low-fidelity{\" \"}\n                </span>\n                as they meant to provide users a rough idea of what the new\n                potential custom form builder could look like.\n              </p>\n              <p>\n                With the same user groups, I walked them through each concept\n                and gather feedback from them.\n              </p>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col lg=\"12\" className={sharedStyles.creamBg}>\n              <p>\n                <span className={sharedStyles.bold}>\n                  Concept #1 - Condensed View\n                </span>\n              </p>\n              <p>\n                This concept was inspired by the look and feel of Microsoft\n                Excel since every research participant mentioned it as one of\n                the tools used to create forms.\n              </p>\n              <p>\n                Users can enter questions in the left column and select response\n                type from the dropdown in the right column. Users can also hit\n                the enter/return key on their keyboard to quickly add next\n                questions.\n              </p>\n              <div className=\"text-center\">\n                <ImageBox\n                  src={this.getImageUrl(\"1.png\")}\n                  alt=\"\"\n                  className=\"img-fluid\"\n                />\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col lg=\"12\" className={sharedStyles.creamBg}>\n              <p>\n                <span className={sharedStyles.bold}>\n                  Concept #2 - Item-by-Item\n                </span>\n                <p>\n                  This concept was created based on the existing PlanGrid Native\n                  Daily Report as every research participant used this tool in\n                  the process.{\" \"}\n                </p>\n                <p>\n                  Users can fully customize their form by adding components like\n                  sections or questions with various types of answers.\n                </p>\n              </p>\n              <div className=\"text-center\">\n                <ImageBox\n                  src={this.getImageUrl(\"2.png\")}\n                  alt=\"\"\n                  className=\"img-fluid\"\n                />\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col lg=\"12\" className={sharedStyles.creamBg}>\n              <p>\n                <span className={sharedStyles.bold}>\n                  Concept #3: Smart PDF\n                </span>\n                <br />\n                This concept was designed based on the existing PDF import\n                feature on PlanGrid Field Reports. It was included in the\n                concept testing because every research participant already\n                worked with the PDF files.\n              </p>\n              <p>\n                Users can upload an existing PDF file and draw text fields or\n                create checkboxes directly on PlanGrid.\n              </p>\n              <div className=\"text-center\">\n                <ImageBox\n                  src={this.getImageUrl(\"3.png\")}\n                  alt=\"\"\n                  className=\"img-fluid\"\n                />\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col lg=\"4\">\n              <h3>\n                Concept Testing/ <br />\n                Conclusion\n              </h3>\n            </Col>\n            <Col lg=\"8\">\n              <p>\n                Overall, users found concept #2 (Item-by-item) to suit their\n                needs the most. The design of concept #2 provided\n                customizability while also allowed the users to manage the\n                layout of the template.\n              </p>\n\n              <p>\n                Many users liked the idea of using the keyboard to quickly enter\n                questions in concept #1 (Condensed view). While they found the\n                concept to be convenient and efficient, all of them mentioned\n                the importance of organizing the form layout. Therefore, this\n                concept wouldn't meet their needs.\n              </p>\n              <p>\n                Users found concept #3 (Smart PDF) to be cool, but it didn't\n                seem to solve their pain points. The concept still required PDF\n                files to be created separately and the users also needed to\n                manually draw each text field after uploading the PDF to\n                PlanGrid. This concept would also require excessive development\n                effort, making it the least feasible and desirable.\n              </p>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col lg=\"4\">\n              <h3>Final Design</h3>\n            </Col>\n            <Col lg=\"8\">\n              <p>\n                From the above conclusion, concept #2 was chosen as a final\n                design. I revised the prototype and made it a high-fidelity\n                prototype.\n              </p>\n              <p>\n                It should be noted that these designs aren't production version. \n                I wrapped up this project during my last week of internship, so another designer \n                completed the final design of this feature after I left. \n              </p>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col lg=\"12\" className={sharedStyles.creamBg}>\n              <p>\n                <span className={sharedStyles.bold}>\n                  {\" \"}\n                  Form Creating Experience{\" \"}\n                </span>\n                <br />\n                Users can only create forms through PlanGrid web app. The design\n                allows users to create sections and embed questions with various\n                response types to it.\n              </p>\n              <ImageBox\n                src={this.getImageUrl(\"final-creator.png\")}\n                alt=\"\"\n                className=\"img-fluid\"\n              />\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col lg=\"12\" className={sharedStyles.creamBg}>\n              <p>\n                <span className={sharedStyles.bold}>\n                  {\" \"}\n                  Form Submitting Experience{\" \"}\n                </span>\n                <br />\n                If assigned to a form, users will be able to fill out the form on\n                both web app &amp; tablets. They will see a list of questions\n                with a pre-defined response type specified by the form creator.\n              </p>\n              <ImageBox\n                src={this.getImageUrl(\"final-submitter.png\")}\n                alt=\"\"\n                className=\"img-fluid\"\n              />\n            </Col>\n          </Row>\n        </Container>\n      </ProjectLayout>\n    );\n  }\n\n  private getImageUrl(filename: string) {\n    return withPrefix(\n      `/images/${this.props.data.project.edges[0].node.imageFolder}/${filename}`\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query CustomFormBuilderQuery($path: String!) {\n    allProjects: allProjectsJson {\n      ...ProjectFields\n    }\n    project: allProjectsJson(filter: { url: { eq: $path } }) {\n      ...ProjectFields\n    }\n    mainImage: file(relativePath: { eq: \"custom-form-builder/main.png\" }) {\n      ...ProjectMainImageSizes\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"term\":\"styles-module--term--1EX5w\",\"topicRight\":\"styles-module--topicRight--2Mrt0\",\"imageTitle\":\"styles-module--image-title--Zt6Pd\",\"textHighlight\":\"styles-module--text-highlight--1JEFo\",\"pin\":\"styles-module--pin--VZBWN\",\"sub\":\"styles-module--sub--3siEi\",\"bold\":\"styles-module--bold--1LVom\",\"creamBg\":\"styles-module--cream-bg--1arYQ\",\"green\":\"styles-module--green--fmQll\",\"red\":\"styles-module--red--1Mk14\",\"learning\":\"styles-module--learning--upcE8\",\"figureNoMarginBottom\":\"styles-module--figure-no-margin-bottom--2ulru\"};"],"sourceRoot":""}