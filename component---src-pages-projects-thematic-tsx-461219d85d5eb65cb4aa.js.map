{"version":3,"sources":["webpack:///./src/pages/projects/thematic.tsx","webpack:///./src/pages/projects/styles.module.scss"],"names":["ThematicPage","render","allProjects","this","props","data","edges","map","e","node","currentProject","project","currentProjectGroup","allProjectGroups","find","pg","name","projectGroup","mainImage","childImageSharp","fluid","className","lg","sharedStyles","getImageUrl","filename","withPrefix","imageFolder","React","pageQuery","module","exports"],"mappings":"+QASqBA,E,wLAIZC,OAAP,WAAgB,WACd,OACE,gBAAC,IAAD,CACEC,YAAaC,KAAKC,MAAMC,KAAKH,YAAYI,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAC1DC,eAAgBP,KAAKC,MAAMC,KAAKM,QAAQL,MAAM,GAAGG,KACjDG,oBACET,KAAKC,MAAMC,KAAKQ,iBAAiBP,MAAMQ,MACrC,SAAAC,GAAE,OACAA,EAAGN,KAAKO,MAAQ,EAAKZ,MAAMC,KAAKM,QAAQL,MAAM,GAAGG,KAAKQ,gBACxDR,KAEJS,UAAWf,KAAKC,MAAMC,KAAKa,UAAUC,gBAAgBC,OAErD,gBAAC,IAAD,KACA,gBAAC,IAAD,CAAKC,UAAU,0BACX,gBAAC,IAAD,CAAKC,GAAG,KACN,qBAAGD,UAAWE,UAAd,8D,EAUJC,YAAR,SAAoBC,GAClB,OAAOC,YAAW,WACLvB,KAAKC,MAAMC,KAAKM,QAAQL,MAAM,GAAGG,KAAKkB,YADlC,IACiDF,I,GAhC5BG,aAqC7BC,EAAY,c,qBC7CzBC,EAAOC,QAAU,CAAC,WAAa,oCAAoC,MAAQ,8BAA8B,OAAS","file":"component---src-pages-projects-thematic-tsx-461219d85d5eb65cb4aa.js","sourcesContent":["import * as React from \"react\";\nimport * as sharedStyles from \"./styles.module.scss\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport { graphql, withPrefix } from \"gatsby\";\nimport { ImageBox } from \"../../components/image-box\";\nimport { ProjectLayout } from \"../../components/project-layout\";\nimport { OutboundLink } from \"gatsby-plugin-google-analytics\";\nimport { ProjectPageProps } from \"../../models/project-page-props\";\n\nexport default class ThematicPage extends React.Component<\n  ProjectPageProps,\n  {}\n> {\n  public render() {\n    return (\n      <ProjectLayout\n        allProjects={this.props.data.allProjects.edges.map(e => e.node)}\n        currentProject={this.props.data.project.edges[0].node}\n        currentProjectGroup={\n          this.props.data.allProjectGroups.edges.find(\n            pg =>\n              pg.node.name == this.props.data.project.edges[0].node.projectGroup\n          ).node\n        }\n        mainImage={this.props.data.mainImage.childImageSharp.fluid}\n      >\n        <Container>\n        <Row className=\"justify-content-center\">\n            <Col lg=\"8\">\n              <p className={sharedStyles.coming}>\n              A complete case study of this project is coming soon. \n              </p>\n            </Col>\n          </Row>\n        </Container>\n      </ProjectLayout>\n    );\n  }\n\n  private getImageUrl(filename: string) {\n    return withPrefix(\n      `/images/${this.props.data.project.edges[0].node.imageFolder}/${filename}`\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query ThematicQuery($path: String!) {\n    allProjects: allProjectsJson {\n      ...ProjectFields\n    }\n    allProjectGroups: allProjectGroupsJson {\n      ...ProjectGroupFields\n    }\n    project: allProjectsJson(filter: { url: { eq: $path } }) {\n      ...ProjectFields\n    }\n    mainImage: file(relativePath: { eq: \"thematic/main.png\" }) {\n      ...MainImageSizes\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageTitle\":\"styles-module--image-title--Zt6Pd\",\"quote\":\"styles-module--quote--1E26q\",\"coming\":\"styles-module--coming--1o3jN\"};"],"sourceRoot":""}