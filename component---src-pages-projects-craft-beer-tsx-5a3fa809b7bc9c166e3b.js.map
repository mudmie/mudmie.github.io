{"version":3,"sources":["webpack:///./src/components/image-box.module.scss","webpack:///./src/pages/projects/styles.module.scss","webpack:///./src/components/image-box.tsx","webpack:///./src/pages/projects/craft-beer.tsx"],"names":["module","exports","ImageBox","props","state","isModalOpen","toggleModal","bind","this","setState","render","src","alt","className","styles","onClick","showCaption","isOpen","toggle","centered","fade","charCode","color","React","CraftBeerPage","allProjects","data","edges","map","e","node","currentProject","project","currentProjectGroup","allProjectGroups","find","pg","name","projectGroup","mainImage","childImageSharp","fluid","lg","sharedStyles","getImageUrl","filename","withPrefix","imageFolder","pageQuery"],"mappings":"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","file":"component---src-pages-projects-craft-beer-tsx-5a3fa809b7bc9c166e3b.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageBox\":\"image-box-module--image-box--3n3h7\",\"modal\":\"image-box-module--modal--a--Wc\",\"imgCaption\":\"image-box-module--img-caption--1ecPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageTitle\":\"styles-module--image-title--Zt6Pd\",\"quote\":\"styles-module--quote--1E26q\",\"coming\":\"styles-module--coming--1o3jN\"};","import * as React from \"react\";\r\nimport { Modal, ModalBody, ModalFooter, Button, ModalHeader } from \"reactstrap\";\r\nimport * as styles from \"./image-box.module.scss\";\r\n\r\nexport interface ImageBoxProps {\r\n  src: string;\r\n  alt?: string;\r\n  className?: string;\r\n  showCaption?: boolean;\r\n}\r\n\r\nexport interface ImageBoxState {\r\n  isModalOpen: boolean;\r\n}\r\n\r\nexport class ImageBox extends React.Component<ImageBoxProps, ImageBoxState> {\r\n  constructor(props: ImageBoxProps) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n  }\r\n\r\n  public toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <>\r\n        <figure>\r\n          <img\r\n            src={this.props.src}\r\n            alt={this.props.alt}\r\n            className={`${styles.imageBox} ${this.props.className}`}\r\n            onClick={this.toggleModal}\r\n          />\r\n          {this.props.showCaption === false ? null : (\r\n            <figcaption className={`text-center ${styles.imgCaption}`}>\r\n              {this.props.alt}\r\n            </figcaption>\r\n          )}\r\n        </figure>\r\n        <Modal\r\n          isOpen={this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n          centered={true}\r\n          fade={false}\r\n          className={styles.modal}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal} charCode=\"X\">\r\n            {this.props.alt}\r\n          </ModalHeader>\r\n          <ModalBody className=\"text-center\">\r\n            <img\r\n              src={this.props.src}\r\n              alt={this.props.alt}\r\n              className={this.props.className}\r\n            />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggleModal}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport * as sharedStyles from \"./styles.module.scss\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport { graphql, withPrefix } from \"gatsby\";\r\nimport { ImageBox } from \"../../components/image-box\";\r\nimport { ProjectLayout } from \"../../components/project-layout\";\r\nimport { ProjectPageProps } from \"../../models/project-page-props\";\r\n\r\nexport default class CraftBeerPage extends React.Component<\r\n  ProjectPageProps,\r\n  {}\r\n> {\r\n  public render() {\r\n    return (\r\n      <ProjectLayout\r\n        allProjects={this.props.data.allProjects.edges.map(e => e.node)}\r\n        currentProject={this.props.data.project.edges[0].node}\r\n        currentProjectGroup={\r\n          this.props.data.allProjectGroups.edges.find(\r\n            pg =>\r\n              pg.node.name == this.props.data.project.edges[0].node.projectGroup\r\n          ).node\r\n        }\r\n        mainImage={this.props.data.mainImage.childImageSharp.fluid}\r\n      >\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"8\">\r\n              <h3>About the Company</h3>\r\n              <p>\r\n                The Liquor Control Board of Ontario (LCBO) is one of the world’s\r\n                largest purchaser of alcoholic beverages. It distributes and\r\n                sells liquor throughout the province of Ontario in Canada. In\r\n                2016, an innovation lab, LCBO|next, was founded to design and\r\n                develop new technologies that will enhance LCBO’s technology\r\n                initiatives.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"8\">\r\n              <h3>My Roles</h3>\r\n              <p>\r\n                As a UX/UI designer at the lab, I met with stakeholders to\r\n                discuss their problems and understand the user requirements and\r\n                constraints. I designed a web portal that allows LCBO retail\r\n                employees to place craft beer orders directly with brewers.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"8\">\r\n              <h3>Background</h3>\r\n              <p>\r\n                Craft beer is usually produced by a small to medium size local\r\n                breweries. This makes it impossible for the breweries to supply\r\n                a sufficient amount of products to all LCBO warehouse at once.\r\n                As a result, each LCBO retail store needs to contact local\r\n                breweries directly to place orders and manage shipping\r\n                logistics.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"8\">\r\n              <h3>Problems</h3>\r\n              <p className={sharedStyles.quote}>\r\n                With many factors such as promotion and seasonal items, it is\r\n                impossible for LCBO employees to order an accurate amount of\r\n                craft beer by just relying on their experience and gut feeling.\r\n                Without a reliable ordering system, the process will continue to\r\n                be time-consuming and prone to error.\r\n              </p>\r\n\r\n              <p>\r\n                A store manager and a beer ambassador are responsible for\r\n                managing craft beer inventory and placing orders. Currently, the\r\n                inventory is tracked with a spreadsheet and calculated by hand.\r\n                To order the products, the employee needs to estimate the\r\n                quantity before making phone calls to each craft brewer to place\r\n                an order and arrange a delivery date. To modify, update or check\r\n                orders, the staff has to make more phone calls during the week.\r\n              </p>\r\n\r\n              <p>\r\n                This current process doesn’t only cause a burden to LCBO staff,\r\n                but also the craft brewers. Since there are about 660 LCBO\r\n                stores across Ontario, each brewer can receive hundreds of phone\r\n                calls during the week. In addition, the current process\r\n                restricts order modification to be made only through phone\r\n                calls. As a result, an unexpected quantity or products can show\r\n                up on the delivery day if the brewer forgets to update with the\r\n                store.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"8\">\r\n              <h3>User Interview</h3>\r\n              <p className={sharedStyles.quote}>\r\n                I know the problems the users face. I also have a picture of the\r\n                system that I want to design to solve the problems, but I can’t\r\n                just do that. Why?\r\n                <br />\r\n                Because I’m not the user!\r\n                <br />\r\n                It doesn’t make sense to design a system that I love to use, but\r\n                the real users hate to use.\r\n              </p>\r\n              <p>\r\n                Although I already understand the problems that LCBO staff and\r\n                craft brewers are facing, it’s still crucial for me to sit and\r\n                chat with the users to ask questions and discover what kind of\r\n                system that they are looking for.\r\n              </p>\r\n              <p>\r\n                From interview sessions with LCBO employees and craft brewers, I\r\n                learn that\r\n              </p>\r\n              <ul>\r\n                <li>\r\n                  LCBO employees look for a system that would tell the exact\r\n                  number of products needed to be ordered.\r\n                </li>\r\n                <li>\r\n                  LCBO employees would like to know an estimated delivery date\r\n                  from the craft brewers.\r\n                </li>\r\n                <li>\r\n                  After receiving orders from each LCBO store, craft brewers\r\n                  have to record order details to their system manually because\r\n                  LCBO doesn’t provide any platform for them to track the order\r\n                  history.\r\n                </li>\r\n                <li>\r\n                  Craft brewers need an ability to modify orders as sometimes\r\n                  they can’t keep up with production or they realize that the\r\n                  store orders too many or too less.\r\n                </li>\r\n                <li>\r\n                  Both parties want to be able to make requests or updates\r\n                  through the system.\r\n                </li>\r\n              </ul>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"8\">\r\n              <h3>Work Breakdown Structure</h3>\r\n              <p>\r\n                I use the Work Breakdown Structure to make sure that all\r\n                required components are included in the design. The system is\r\n                mainly divided into two parts: a portal for LCBO store and a\r\n                portal for craft brewers.\r\n              </p>\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg=\"11\">\r\n                  <ImageBox\r\n                    src={this.getImageUrl(\"wbs.png\")}\r\n                    alt=\"Work Breakdown Structure of Craft Beer Ordering System\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"8\">\r\n              <h3>Wireframes</h3>\r\n              <p>\r\n                Based on my research on modern e-commerce systems, there are 3\r\n                keys elements that exist in most of the systems:\r\n              </p>\r\n              <ul>\r\n                <li>Order summary/history section </li>\r\n                <li>Order details section</li>\r\n                <li>New order section</li>\r\n              </ul>\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg=\"11\">\r\n                  <ImageBox\r\n                    src={this.getImageUrl(\"wireframes.png\")}\r\n                    alt=\"Wireframes of Craft Beer Ordering System\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"8\">\r\n              <h3>Create Order </h3>\r\n\r\n              <p className={sharedStyles.quote}>\r\n                The main objective of this project is to build a system that\r\n                helps determine the quantity of craft beer products LCBO\r\n                employees should and allows them to place orders online.\r\n              </p>\r\n              <p>\r\n                To place an order, the employees need to navigate to \"New Order\"\r\n                on the menu bar. From there, they can search for craft beer\r\n                vendors and see the list of products that each vendor carries.\r\n                Once a vendor is selected, the employee will see product\r\n                information as well as any promotion associated with the product\r\n                (PROMO), Suggested Order Quantity (SOQ) and current store\r\n                inventory (TSI). The unit number will be auto-filled based on\r\n                the SOQ, but the users will be able to adjust the number as\r\n                needed.\r\n              </p>\r\n              <p>\r\n                In a case that the employees decide not to order any product\r\n                from a vendor to their store, they can check the \"No Order\r\n                Reminder\" box, which will trigger the system to send an\r\n                automatic email to notify the vendor.\r\n              </p>\r\n\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg=\"11\">\r\n                  <ImageBox\r\n                    src={this.getImageUrl(\"lcbo.png\")}\r\n                    alt=\"Order Summary Page on LCBO Employee Web Portal\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"8\">\r\n              <h3>Review &amp; Confirm Order </h3>\r\n              <p className={sharedStyles.quote}>\r\n                From perspectives of craft brewers, the system should allow them\r\n                to review the order submitted by the store and make any\r\n                necessary adjustment before shipping the products to LCBO\r\n                stores.\r\n              </p>\r\n              Once the store employees submit the order, it will show up on the\r\n              craft brewer’s portal. From there, craft brewers can review\r\n              products, their quantity, and store comments. They can modify the\r\n              quantity of product in the order and provide comments to the store\r\n              as appropriate. Before they can confirm the order, they have to\r\n              select at least one possible delivery date. This piece of\r\n              information will help the store to arrange a delivery schedule.\r\n              <p />\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg=\"11\">\r\n                  <ImageBox\r\n                    src={this.getImageUrl(\"craft.png\")}\r\n                    alt=\"Order Summary Page on LCBO Employee Web Portal\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg=\"8\">\r\n              <h3>Order Details </h3>\r\n              <p>\r\n                From the order summary page, LCBO employees can take a quick\r\n                glance on order status, which informs the number of products\r\n                that have either been confirmed, modified, or delivered. On the\r\n                order details page, the quantity of product in the original\r\n                order is printed in black in the \"Units\" column. In a\r\n                circumstance where the craft brewers decide to make an\r\n                adjustment to the product quantity, the original quantity will\r\n                get strikethrough, and the modified amount will be printed in\r\n                red, put in a bracket and placed beside the original quantity\r\n                There is also a button for the store employees to confirm\r\n                delivery once they receive the products.\r\n              </p>\r\n              <Row className=\"justify-content-center\">\r\n                <Col lg=\"5\">\r\n                  <ImageBox\r\n                    src={this.getImageUrl(\"summary-lcbo.png\")}\r\n                    alt=\"Order Summary Page on LCBO Employee Web Portal\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </Col>\r\n                <Col lg=\"5\">\r\n                  <ImageBox\r\n                    src={this.getImageUrl(\"detail-lcbo.png\")}\r\n                    alt=\"Order Summary Page on Craft Brewer Web Portal\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </ProjectLayout>\r\n    );\r\n  }\r\n\r\n  private getImageUrl(filename: string) {\r\n    return withPrefix(\r\n      `/images/${this.props.data.project.edges[0].node.imageFolder}/${filename}`\r\n    );\r\n  }\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query CraftBeerQuery($path: String!) {\r\n    allProjects: allProjectsJson {\r\n      ...ProjectFields\r\n    }\r\n    allProjectGroups: allProjectGroupsJson {\r\n      ...ProjectGroupFields\r\n    }\r\n    project: allProjectsJson(filter: { url: { eq: $path } }) {\r\n      ...ProjectFields\r\n    }\r\n    mainImage: file(relativePath: { eq: \"craft-beer/main.png\" }) {\r\n      ...MainImageSizes\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}